//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Scripts/Managers/Input/InputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputManager : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputManager()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputManager"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""ffcb2c81-1808-4da2-afb6-d371b84d5520"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6b7f6295-0345-4947-adf0-67abe99d2778"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""5ac13be5-9727-4a2f-8edd-c8c20fde1fe4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Abillity1"",
                    ""type"": ""Button"",
                    ""id"": ""5fd95c2a-af57-4206-8230-da4524cb49af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abillity2"",
                    ""type"": ""Button"",
                    ""id"": ""7a34b93e-cf5b-4a14-bfdc-38ea62d623b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abillity3"",
                    ""type"": ""Button"",
                    ""id"": ""79eba128-4c78-47a9-9084-6fc0ecda7472"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abillity4"",
                    ""type"": ""Button"",
                    ""id"": ""cfc934cb-aac2-4d5e-8ee6-2f6a6d1e63fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Abillity5"",
                    ""type"": ""Button"",
                    ""id"": ""b8f4402b-7b33-4048-869f-e4a0719d11dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugRestart"",
                    ""type"": ""Button"",
                    ""id"": ""b2f8973a-3178-4fe7-adba-1710e18a34f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WaterAction"",
                    ""type"": ""Button"",
                    ""id"": ""2f0ee515-1ae5-4382-834c-f1e4f0349697"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""5e8094eb-c786-410f-bb11-4e7a642553dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""a18fb17a-8dab-473a-8a75-aa65f5deeaa4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8bd7d6a7-ecde-4428-b904-8cc69c9eeeec"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fc573d27-7277-4596-be66-627b46ea337f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""52f66fb1-3443-482a-a2e9-49add2be7696"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f876a67d-1967-4f32-858c-2a65320bac96"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9f11f0d8-6359-46e3-9180-04c22bc31f20"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d35754e-a7f6-4bf7-b849-483393735bc0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abillity1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec375880-3753-4094-bbed-d15fa89a2418"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abillity2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abd3ed28-f580-44b3-8daf-c5914472a43e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abillity3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd1ecb63-f418-4e1a-8a48-c69a6107cec5"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abillity4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11453bf5-9b7f-4a1c-bd66-f47670f1a28a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Abillity5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d13cba3e-b49b-4f2c-a4c7-303de6b0ab15"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugRestart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fa4e4c9-f519-4866-b141-87819a40fbac"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88fe73d6-5159-4652-be37-7bf5be4d34e7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Abillity1 = m_Player.FindAction("Abillity1", throwIfNotFound: true);
        m_Player_Abillity2 = m_Player.FindAction("Abillity2", throwIfNotFound: true);
        m_Player_Abillity3 = m_Player.FindAction("Abillity3", throwIfNotFound: true);
        m_Player_Abillity4 = m_Player.FindAction("Abillity4", throwIfNotFound: true);
        m_Player_Abillity5 = m_Player.FindAction("Abillity5", throwIfNotFound: true);
        m_Player_DebugRestart = m_Player.FindAction("DebugRestart", throwIfNotFound: true);
        m_Player_WaterAction = m_Player.FindAction("WaterAction", throwIfNotFound: true);
        m_Player_OpenMenu = m_Player.FindAction("OpenMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Abillity1;
    private readonly InputAction m_Player_Abillity2;
    private readonly InputAction m_Player_Abillity3;
    private readonly InputAction m_Player_Abillity4;
    private readonly InputAction m_Player_Abillity5;
    private readonly InputAction m_Player_DebugRestart;
    private readonly InputAction m_Player_WaterAction;
    private readonly InputAction m_Player_OpenMenu;
    public struct PlayerActions
    {
        private @InputManager m_Wrapper;
        public PlayerActions(@InputManager wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Abillity1 => m_Wrapper.m_Player_Abillity1;
        public InputAction @Abillity2 => m_Wrapper.m_Player_Abillity2;
        public InputAction @Abillity3 => m_Wrapper.m_Player_Abillity3;
        public InputAction @Abillity4 => m_Wrapper.m_Player_Abillity4;
        public InputAction @Abillity5 => m_Wrapper.m_Player_Abillity5;
        public InputAction @DebugRestart => m_Wrapper.m_Player_DebugRestart;
        public InputAction @WaterAction => m_Wrapper.m_Player_WaterAction;
        public InputAction @OpenMenu => m_Wrapper.m_Player_OpenMenu;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Abillity1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity1;
                @Abillity1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity1;
                @Abillity1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity1;
                @Abillity2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity2;
                @Abillity2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity2;
                @Abillity2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity2;
                @Abillity3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity3;
                @Abillity3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity3;
                @Abillity3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity3;
                @Abillity4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity4;
                @Abillity4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity4;
                @Abillity4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity4;
                @Abillity5.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity5;
                @Abillity5.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity5;
                @Abillity5.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbillity5;
                @DebugRestart.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDebugRestart;
                @DebugRestart.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDebugRestart;
                @DebugRestart.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDebugRestart;
                @WaterAction.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWaterAction;
                @WaterAction.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWaterAction;
                @WaterAction.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWaterAction;
                @OpenMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMenu;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Abillity1.started += instance.OnAbillity1;
                @Abillity1.performed += instance.OnAbillity1;
                @Abillity1.canceled += instance.OnAbillity1;
                @Abillity2.started += instance.OnAbillity2;
                @Abillity2.performed += instance.OnAbillity2;
                @Abillity2.canceled += instance.OnAbillity2;
                @Abillity3.started += instance.OnAbillity3;
                @Abillity3.performed += instance.OnAbillity3;
                @Abillity3.canceled += instance.OnAbillity3;
                @Abillity4.started += instance.OnAbillity4;
                @Abillity4.performed += instance.OnAbillity4;
                @Abillity4.canceled += instance.OnAbillity4;
                @Abillity5.started += instance.OnAbillity5;
                @Abillity5.performed += instance.OnAbillity5;
                @Abillity5.canceled += instance.OnAbillity5;
                @DebugRestart.started += instance.OnDebugRestart;
                @DebugRestart.performed += instance.OnDebugRestart;
                @DebugRestart.canceled += instance.OnDebugRestart;
                @WaterAction.started += instance.OnWaterAction;
                @WaterAction.performed += instance.OnWaterAction;
                @WaterAction.canceled += instance.OnWaterAction;
                @OpenMenu.started += instance.OnOpenMenu;
                @OpenMenu.performed += instance.OnOpenMenu;
                @OpenMenu.canceled += instance.OnOpenMenu;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnAbillity1(InputAction.CallbackContext context);
        void OnAbillity2(InputAction.CallbackContext context);
        void OnAbillity3(InputAction.CallbackContext context);
        void OnAbillity4(InputAction.CallbackContext context);
        void OnAbillity5(InputAction.CallbackContext context);
        void OnDebugRestart(InputAction.CallbackContext context);
        void OnWaterAction(InputAction.CallbackContext context);
        void OnOpenMenu(InputAction.CallbackContext context);
    }
}
